// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           String  @id()
  companyName  String
  contactName  String
  contactTitle String
  address      String
  city         String
  postalCode   String?
  region       String?
  country      String
  phone        String
  fax          String?
  orders       Order[]
}

model Employee {
  id              String     @id()
  lastName        String
  firstName       String?
  title           String
  titleOfCourtesy String
  birthDate       DateTime
  hireDate        DateTime
  address         String
  city            String
  postalCode      String
  country         String
  homePhone       String
  extension       Int
  notes           String
  recipientId     String?
  recipient       Employee?  @relation("reports", fields: [recipientId], references: [id], onDelete: Cascade)
  reporters       Employee[] @relation("reports")
  orders          Order[]
}

model Order {
  id             String    @id()
  orderDate      DateTime
  requiredDate   DateTime
  shippedDate    DateTime?
  shipVia        Int
  freight        Decimal   @db.Decimal(10, 2)
  shipName       String
  shipCity       String
  shipRegion     String?
  shipPostalCode String?
  shipCountry    String
  customerId     String
  employeeId     String
  customer       Customer  @relation(fields: [customerId], references: [id], onDelete: Cascade)
  employee       Employee  @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  details        Detail[]
}

model Detail {
  id        Int     @id() @default(autoincrement())
  unitPrice Decimal @db.Decimal(10, 2)
  quantity  Int
  discount  Decimal @db.Decimal(10, 2)
  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Product {
  id              String   @id()
  name            String
  quantityPerUnit String
  unitPrice       Decimal  @db.Decimal(10, 2)
  unitsInStock    Int
  unitsOnOrder    Int
  reorderLevel    Int
  discontinued    Int
  supplierId      String
  details         Detail[]
  supplier        Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}

model Supplier {
  id           String    @id()
  companyName  String
  contactName  String
  contactTitle String
  address      String
  city         String
  region       String?
  postalCode   String
  country      String
  phone        String
  products     Product[]
}

enum QueryType {
  SELECT
  SELECT_WHERE
  SELECT_LEFT_JOIN
  SELECT_LEFT_JOIN_WHERE
}

model Metric {
  id        String    @id() @default(uuid())
  query     String
  ms        Int
  type      QueryType
  createdAt DateTime  @default(now())
}
